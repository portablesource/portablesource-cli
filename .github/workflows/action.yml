name: Build, Publish and Release PortableSource

env:
  PROJECT_MAIN: portablesource_main.py
  WHEEL_DIST: dist/*.whl

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build wheel
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build wheel
        run: python -m build

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheel-ubuntu-latest
          path: ${{ env.WHEEL_DIST }}

  publish:
    name: Publish wheel to PyPI
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download wheel artifact
        uses: actions/download-artifact@v4
        with:
          name: wheel-ubuntu-latest
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  binaries:
    name: Build Nuitka binaries
    needs: publish
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: pip install .

      - name: Build Executable with Nuitka
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: ${{ env.PROJECT_MAIN }}
          mode: onefile

      - name: Archive binary
        run: |
          if [ "${{ runner.os }}" == "Windows" ]; then
            Compress-Archive -Path build/portablesource_main.exe -DestinationPath portablesource-Windows.zip
          elif [ "${{ runner.os }}" == "Linux" ]; then
            cd build
            zip ../portablesource-Linux.zip portablesource_main
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: portablesource-${{ runner.os }}
          path: portablesource-*.zip

  release:
    name: Release compiled binaries
    needs: binaries
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/portablesource-*/*.zip
            artifacts/wheel-ubuntu-latest/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}